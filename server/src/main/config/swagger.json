{
  "openapi": "3.0.0",
  "info": {
    "title": "Caveo Backend API",
    "version": "1.0.0",
    "description": "Backend API with AWS Cognito integration"
  },
  "servers": [
    {
      "url": "https://api.caveo.com.br",
      "description": "Production server"
    },
    {
      "url": "https://staging-api.caveo.com.br",
      "description": "Staging server"
    },
    {
      "url": "http://localhost:3000",
      "description": "Local development"
    }
  ],
  "components": {
    "securitySchemes": {
      "bearerAuth": {
        "type": "http",
        "scheme": "bearer",
        "bearerFormat": "JWT"
      }
    },
    "schemas": {
      "User": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid"
          },
          "email": {
            "type": "string",
            "format": "email"
          },
          "name": {
            "type": "string"
          },
          "role": {
            "type": "string",
            "enum": ["admin", "user"]
          },
          "isOnboarded": {
            "type": "boolean"
          }
        }
      },
      "AuthRequest": {
        "type": "object",
        "required": ["email", "password"],
        "properties": {
          "email": {
            "type": "string",
            "format": "email"
          },
          "password": {
            "type": "string",
            "minLength": 8
          },
          "name": {
            "type": "string"
          },
          "role": {
            "type": "string",
            "enum": ["admin", "user"]
          }
        }
      },
      "AuthResponse": {
        "type": "object",
        "properties": {
          "accessToken": {
            "type": "string"
          },
          "refreshToken": {
            "type": "string"
          },
          "isOnboarded": {
            "type": "boolean"
          }
        }
      },
      "EditAccountRequest": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "minLength": 1
          },
          "role": {
            "type": "string",
            "enum": ["admin", "user"]
          },
          "userId": {
            "type": "string",
            "format": "uuid",
            "description": "Only for admin users to edit other users"
          }
        }
      },
      "EditAccountResponse": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid"
          },
          "name": {
            "type": "string"
          },
          "email": {
            "type": "string",
            "format": "email"
          },
          "isOnboarded": {
            "type": "boolean"
          }
        }
      },
      "SearchUsersResponse": {
        "type": "object",
        "properties": {
          "users": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/User"
            }
          },
          "meta": {
            "type": "object",
            "properties": {
              "total": {
                "type": "number"
              },
              "itemsPerPage": {
                "type": "number",
                "enum": [5, 10, 15, 20, 25, 50]
              },
              "totalPages": {
                "type": "number"
              },
              "page": {
                "type": "number"
              }
            }
          }
        }
      },
      "ErrorResponse": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "description": "Error code/type"
          },
          "message": {
            "type": "string",
            "description": "Error message"
          }
        }
      },
      "ValidationErrorResponse": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "enum": ["VALIDATION"],
            "description": "Error type for validation errors"
          },
          "message": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "field": {
                  "type": "string",
                  "description": "The field that failed validation"
                },
                "error": {
                  "type": "string",
                  "description": "The validation error message"
                }
              }
            },
            "description": "Array of validation errors"
          }
        }
      }
    }
  },
  "paths": {
    "/v1/auth": {
      "post": {
        "summary": "Sign in or register",
        "description": "Authenticate user or register new user with AWS Cognito",
        "tags": ["Authentication"],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AuthRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Authentication successful (sign in or registration with immediate sign in)",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AuthResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad request - Invalid input data or validation error",
            "content": {
              "application/json": {
                "schema": {
                  "oneOf": [
                    {
                      "$ref": "#/components/schemas/ValidationErrorResponse"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorResponse"
                    }
                  ]
                }
              }
            }
          },
          "401": {
            "description": "Authentication failed",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/v1/me": {
      "get": {
        "summary": "Get current user information",
        "description": "Retrieve the authenticated user's profile information",
        "tags": ["User"],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "responses": {
          "200": {
            "description": "User information retrieved successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/User"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized - Invalid or missing token",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/v1/edit-account": {
      "put": {
        "summary": "Edit account information",
        "description": "Update user account information. Admins can edit any user's account by providing userId.",
        "tags": ["User"],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/EditAccountRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Account updated successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/EditAccountResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad request - Validation error or invalid input data",
            "content": {
              "application/json": {
                "schema": {
                  "oneOf": [
                    {
                      "$ref": "#/components/schemas/ValidationErrorResponse"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorResponse"
                    }
                  ]
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized - Invalid or missing token",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden - Insufficient permissions",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/v1/users": {
      "get": {
        "summary": "Search users (Admin only)",
        "description": "Search and filter users in the system with pagination. Requires admin privileges.",
        "tags": ["Admin"],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "name": "id",
            "in": "query",
            "description": "Filter by user ID",
            "required": false,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "name",
            "in": "query",
            "description": "Filter by user name (minimum 2 characters)",
            "required": false,
            "schema": {
              "type": "string",
              "minLength": 2,
              "maxLength": 100
            }
          },
          {
            "name": "email",
            "in": "query",
            "description": "Filter by user email",
            "required": false,
            "schema": {
              "type": "string",
              "format": "email"
            }
          },
          {
            "name": "role",
            "in": "query",
            "description": "Filter by user role",
            "required": false,
            "schema": {
              "type": "string",
              "enum": ["admin", "user"]
            }
          },
          {
            "name": "isOnboarded",
            "in": "query",
            "description": "Filter by onboarding status",
            "required": false,
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "itemsPerPage",
            "in": "query",
            "description": "Number of items per page",
            "required": false,
            "schema": {
              "type": "number",
              "enum": [5, 10, 15, 20, 25, 50],
              "default": 10
            }
          },
          {
            "name": "page",
            "in": "query",
            "description": "Page number",
            "required": false,
            "schema": {
              "type": "number",
              "minimum": 1,
              "default": 1
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Users retrieved successfully with pagination",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SearchUsersResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad request - Invalid query parameters",
            "content": {
              "application/json": {
                "schema": {
                  "oneOf": [
                    {
                      "$ref": "#/components/schemas/ValidationErrorResponse"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorResponse"
                    }
                  ]
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized - Invalid or missing token",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden - Admin access required",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    }
  },
  "tags": [
    {
      "name": "Authentication",
      "description": "User authentication and registration"
    },
    {
      "name": "User",
      "description": "User management operations"
    },
    {
      "name": "Admin",
      "description": "Admin-only operations"
    }
  ]
}
